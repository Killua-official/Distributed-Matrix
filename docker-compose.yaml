services:
  zookeeper:
    platform: linux/amd64
    image: confluentinc/cp-zookeeper:7.5.2
    container_name: zookeeper
    restart: unless-stopped
    ports:
      - '32181:32181'
      - '2888:2888'
      - '3888:3888'
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper:2888:3888
    healthcheck:
      test: echo stat | nc localhost 32181
      interval: 10s
      timeout: 10s
      retries: 3
    networks:
      - kafka
    logging:
      driver: "json-file"
      options:
        max-size: "1m"

  kafka-ui:
    #    container_name: kafka-ui
    image: provectuslabs/kafka-ui
    ports:
      - 8080:8080
    depends_on:
      - broker-1
      - broker-2
      - broker-3
    environment:
      KAFKA_CLUSTERS_0_NAME: broker-1
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: broker-1:29091
      KAFKA_CLUSTERS_0_METRICS_PORT: 19101
      KAFKA_CLUSTERS_1_NAME: broker-2
      KAFKA_CLUSTERS_1_BOOTSTRAPSERVERS: broker-2:29092
      KAFKA_CLUSTERS_1_METRICS_PORT: 19102
      KAFKA_CLUSTERS_2_NAME: broker-3
      KAFKA_CLUSTERS_2_BOOTSTRAPSERVERS: broker-3:29093
      KAFKA_CLUSTERS_2_METRICS_PORT: 19103
      DYNAMIC_CONFIG_ENABLED: 'true'
    networks:
      - kafka
    logging:
      driver: "json-file"
      options:
        max-size: "1m"

  broker-1:
    platform: linux/amd64
    image: confluentinc/cp-kafka:7.5.2
    container_name: broker-1
    restart: unless-stopped
    ports:
      - '9091:9091'
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:32181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://broker-1:29091,EXTERNAL://localhost:9091
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_JMX_PORT: 19101
      KAFKA_JMX_HOSTNAME: localhost
    healthcheck:
      test: nc -vz localhost 9091
      interval: 10s
      timeout: 10s
      retries: 3
    networks:
      - kafka
    logging:
      driver: "json-file"
      options:
        max-size: "1m"

  broker-2:
    platform: linux/amd64
    image: confluentinc/cp-kafka:7.5.2
    container_name: broker-2
    restart: unless-stopped
    ports:
      - '9092:9092'
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:32181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://broker-2:29092,EXTERNAL://localhost:9092
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_JMX_PORT: 19102
      KAFKA_JMX_HOSTNAME: localhost
    healthcheck:
      test: nc -vz localhost 9092
      interval: 10s
      timeout: 10s
      retries: 3
    networks:
      - kafka
    logging:
      driver: "json-file"
      options:
        max-size: "1m"

  broker-3:
  
    platform: linux/amd64
    image: confluentinc/cp-kafka:7.5.2
    container_name: broker-3
    restart: unless-stopped
    ports:
      - '9093:9093'
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:32181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://broker-3:29093,EXTERNAL://localhost:9093
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_JMX_PORT: 19103
      KAFKA_JMX_HOSTNAME: localhost
    healthcheck:
      test: nc -vz localhost 9093
      interval: 10s
      timeout: 10s
      retries: 3
    networks:
      - kafka
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
  coordinator-service:
    build:
      context: coordinator-service
      dockerfile: Dockerfile
    ports:
      - 8060:8060
    networks:
      - kafka
    environment:
      'server.port': 8060
      'logging.level.org.springframework.web': INFO
      'logging.level.org.springframework.kafka': INFO
      'kafka.bootstrap-servers': 'broker-1:29091,broker-2:29092,broker-3:29093'
  worker-service-1:
    build:
      context: worker-service
      dockerfile: Dockerfile
    networks:
      - kafka
    ports:
      - 8081:8081
    environment:
      #'kafka.group-id': 'worker-service-1'
      'logging.level.org.springframework.web': INFO
      'logging.level.org.springframework.kafka': INFO
      'server.port': 8081
      'kafka.bootstrap-servers': 'broker-1:29091,broker-2:29092,broker-3:29093'
    deploy:
      replicas: 1
  worker-service-2:
    build:
      context: worker-service
      dockerfile: Dockerfile
    networks:
      - kafka
    ports:
      - 8082:8082
    environment:
      'server.port': 8081
      'logging.level.org.springframework.web': INFO
      #'kafka.group-id': 'worker-service-2'
      'logging.level.org.springframework.kafka': INFO
      'kafka.bootstrap-servers': 'broker-1:29091,broker-2:29092,broker-3:29093'
    deploy:
      replicas: 1
  worker-service-3:
    build:
      context: worker-service
      dockerfile: Dockerfile
    networks:
      - kafka
    ports:
      - 8083:8083
    environment:
      #'kafka.group-id': 'worker-service-3'
      'logging.level.org.springframework.web': INFO
      'logging.level.org.springframework.kafka': INFO
      'kafka.bootstrap-servers': 'broker-1:29091,broker-2:29092,broker-3:29093'
      'server.port': 8083
    deploy:
      replicas: 1
  prometheus:
    image: prom/prometheus:v2.37.1
    container_name: prometheus
    networks:
      - kafka
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/:/etc/prometheus/
  grafana:
    image: grafana/grafana-oss:8.5.2
    container_name: grafana
    networks:
      - kafka
    ports:
      - "3000:3000"
    links:
      - prometheus:prometheus
    volumes:
      - ./docker/grafana/provisioning/:/etc/grafana/provisioning/
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
networks:
  kafka:
    name: kafka

